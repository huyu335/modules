nextflow_process {

    name "Test Process NEOANTIGENEDITING_ALIGNTOIEDB"
    script "../main.nf"
    process "NEOANTIGENEDITING_ALIGNTOIEDB"

    tag "modules"
    tag "modules_nfcore"
    tag "modules_msk"
    tag "neoantigenediting"
    tag "neoantigenediting/aligntoIEDB"
    tag "ignore_conda"

    test("neoantigenediting_aligntoIEDB - json") {

        when {
            process {
                """                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map,
                    file(params.test_data_mskcc['neoantigen']['patient_data'], checkIfExists: true)                   
                    ]
                input[1] = [
                    [ id:'fasta', single_end:false ], // meta map,
                    file(params.test_data_mskcc['neoantigen']['iedb']['iedb_fasta'], checkIfExists: true),
                        [
                            file(params.test_data_mskcc['neoantigen']['iedb']['iedb_fasta_phr'], checkIfExists: true),
                            file(params.test_data_mskcc['neoantigen']['iedb']['iedb_fasta_pin'], checkIfExists: true),
                            file(params.test_data_mskcc['neoantigen']['iedb']['iedb_fasta_psq'], checkIfExists: true)
                        ]                   
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(file(process.out.iedb_alignment[0][1]).name).match() }

            )
        }

    }

    test("neoantigenediting_aligntoIEDB - json - stub") {

        options "-stub"

        when {
            process {
                """                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map,
                    file('patient_data')                   
                    ]
                input[1] = [
                    [ id:'fasta', single_end:false ], // meta map,
                    file('iedb_fasta'),
                        [
                            file('iedb_fasta_phr'),
                            file('iedb_fasta_pin'),
                            file('iedb_fasta_psq')
                        ]                   
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }

            )
        }

    }


}
