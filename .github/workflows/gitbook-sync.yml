name: Meta Yaml to MD

# Controls when the workflow will run
on:
  push:
    branches: [main, hotfix/gitbook-sync]
  pull_request:
    branches: [main, develop]
  merge_group:
    types: [checks_requested]
    branches: [main]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pytest-changes:
    name: pytest-changes
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'modules' output variable
      modules: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2 # To retrieve the preceding commit.

      - uses: mirpedrol/paths-filter@main
        id: filter
        with:
          filters: "tests/config/pytest_modules.yml"
          token: ""

  nf-test-changes:
    name: nf-test-changes
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'modules' output variable
      modules: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2 # To retrieve the preceding commit.

      - name: Combine all tags.yml files
        id: get_tags
        run: find . -name "tags.yml" -not -path "./.github/*" -exec cat {} + > .github/tags.yml

      - name: debug
        run: cat .github/tags.yml

      - uses: mirpedrol/paths-filter@main
        id: filter
        with:
          filters: ".github/tags.yml"
          token: ""

  new_module:
    name: new module
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ contains( github.event.head_commit.message, 'Module') }}
    needs: [pytest-changes, nf-test-changes]
    strategy:
      fail-fast: false
      matrix:
        tags:
          [
            "${{ fromJson(needs.pytest-changes.outputs.modules) }}",
            "${{ fromJson(needs.nf-test-changes.outputs.modules) }}",
          ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10" # install the python version needed
      - uses: actions/checkout@v4
        with:
          ref: docs
      - name: Rename md file
        id: replace_slash
        run: |
          FRAGMENT="${{ matrix.tags }}"
          MD_NAME=$(echo $FRAGMENT | sed 's/\//_/g')
          echo "MD_NAME=$MD_NAME" >> $GITHUB_ENV
          echo "${MD_NAME}"
      - name: Download convertor from yml to md
        run: |
          curl -o ${{ github.workspace }}/yaml_to_md.py https://raw.githubusercontent.com/mskcc-omics-workflows/yaml_to_md/0.0.1/yaml_to_md.py
          curl -o ${{ github.workspace }}/requirements.txt https://raw.githubusercontent.com/mskcc-omics-workflows/yaml_to_md/0.0.1/requirements.txt
      - name: Give convertor permissions
        run: chmod +x yaml_to_md.py
      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ github.workspace }}/requirements.txt
      - uses: jaywcjlove/github-action-read-file@main
        id: cat_file_module
        with:
          branch: develop
          path: modules/msk/${{ matrix.tags }}/meta.yml
      - name: Run convertor to generate md file for new module
        run: |
          echo ${{ matrix.tags }}
          echo '${{ steps.cat_file_module.outputs.content }}' > ${{ github.workspace }}/temp.yml
          python ${{ github.workspace }}/yaml_to_md.py all --yaml-file ${{ github.workspace }}/temp.yml --output-file ./modules/${{ env.MD_NAME }}.md --schema-url https://raw.githubusercontent.com/mskcc-omics-workflows/yaml_to_md/0.0.1/nextflow_schema/modules/meta-schema.json
      - name: Check file existence for modules
        id: check_module_files
        uses: andstor/file-existence-action@v1
        with:
          files: modules/${{ matrix.tags }}.md
      - name: Add to SUMMARY for modules
        if: ${{ (steps.check_module_files.outputs.files_exists == 'false') }}
        run: |
          curl -o ${{ github.workspace }}/update_summary.py https://raw.githubusercontent.com/mskcc-omics-workflows/modules/develop/.github/workflows/update_summary.py
          python ${{ github.workspace }}/update_summary.py SUMMARY.md "* [${{ env.MD_NAME }}](modules/${{ env.MD_NAME }}.md)" module > tmp_summary.md
          mv tmp_summary.md SUMMARY.md
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "add doc for ${{ matrix.tags }}"
          add: "*/*.md --force"
          cwd: "./"
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "update summary for ${{ matrix.tags }}"
          add: "SUMMARY.md --force"
          cwd: "./"

  new_subworkflow:
    name: new subworkflow
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ contains( github.event.head_commit.message, 'Subworkflow') }}
    needs: [pytest-changes, nf-test-changes]
    strategy:
      fail-fast: false
      matrix:
        tags:
          [
            "${{ fromJson(needs.pytest-changes.outputs.modules) }}",
            "${{ fromJson(needs.nf-test-changes.outputs.modules) }}",
          ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10" # install the python version needed
      - uses: actions/checkout@v4
        with:
          ref: docs
      - name: Rename md file
        id: replace_slash
        run: |
          FRAGMENT="${{ matrix.tags }}"
          MD_NAME=$(echo $FRAGMENT | sed 's/\//_/g')
          echo "MD_NAME=$MD_NAME" >> $GITHUB_ENV
          echo "${MD_NAME}"
      - name: Download convertor from yml to md
        run: |
          curl -o ${{ github.workspace }}/yaml_to_md.py https://raw.githubusercontent.com/mskcc-omics-workflows/yaml_to_md/0.0.1/yaml_to_md.py
          curl -o ${{ github.workspace }}/requirements.txt https://raw.githubusercontent.com/mskcc-omics-workflows/yaml_to_md/0.0.1/requirements.txt
      - name: Give convertor permissions
        run: chmod +x yaml_to_md.py
      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ github.workspace }}/requirements.txt
      - uses: jaywcjlove/github-action-read-file@main
        id: cat_file_subworkflow
        with:
          branch: develop
          path: subworkflows/msk/${{ matrix.tags }}/meta.yml
      - name: Run convertor to generate md file for new subworkflow
        run: |
          echo '${{ steps.cat_file_subworkflow.outputs.content }}' > ${{ github.workspace }}/temp.yml
          python ${{ github.workspace }}/yaml_to_md.py all --yaml-file ${{ github.workspace }}/temp.yml --output-file ./subworkflows/${{ env.MD_NAME }}.md --schema-url https://raw.githubusercontent.com/mskcc-omics-workflows/yaml_to_md/0.0.1/nextflow_schema/subworkflows/meta-schema.json --subworkflows
      - name: Check file existence for subworkflows
        id: check_subworkflow_files
        uses: andstor/file-existence-action@v1
        with:
          files: subworkflows/${{ matrix.tags }}.md
      - name: Add to SUMMARY for subworkflows
        if: ${{ (steps.check_subworkflow_files.outputs.files_exists == 'false') }}
        run: |
          curl -o ${{ github.workspace }}/update_summary.py https://raw.githubusercontent.com/mskcc-omics-workflows/modules/develop/.github/workflows/update_summary.py
          python ${{ github.workspace }}/update_summary.py SUMMARY.md "* [${{ env.MD_NAME }}](subworkflows/${{ env.MD_NAME }}.md)" subworkflow > tmp_summary.md
          mv tmp_summary.md SUMMARY.md
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "add doc for ${{ env.MD_NAME }}"
          add: "*/*.md --force"
          cwd: "./"
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "update summary for ${{ env.MD_NAME }}"
          add: "SUMMARY.md --force"
          cwd: "./"
