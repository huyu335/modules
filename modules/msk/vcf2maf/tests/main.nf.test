nextflow_process {

    name "Test Process SnpSift"
    script "../main.nf"
    process "vcf2maf"

    tag "modules"
    tag "modules_nfcore"
    tag "vcf2maf"

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("vcf2maf-test") {
        when {
            process {
                """
                input[0] = [
                    [ case_id:'tumor', control_id:'normal' ], // meta map
                    file("/Users/ksivaprakasam/Downloads/C-2HXC96-P001-d01_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-duplex.DONOR22-TP_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-duplex.mutect.vcf", checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test.vcf'], checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
                // See https://nf-co.re/docs/contributing/tutorials/nf-test_assertions for more information and examples.
            )
        }

    }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("vcf2maf-test-stub") {

        options "-stub"

        when {
            process {
                """
                // TODO nf-core: define inputs of the process here. Example:
                
                input[0] = [
                    [ case_id:'tumor', control_id:'normal' ], // meta map
                    file("/Users/ksivaprakasam/Downloads/C-2HXC96-P001-d01_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-duplex.DONOR22-TP_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-duplex.mutect.vcf", checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test.vcf'], checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

}
