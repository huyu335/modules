// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test neoantigeninput
nextflow_process {

    name "Test Process NEOANTIGENINPUT"
    script "../main.nf"
    process "NEOANTIGENINPUT"

    tag "modules"
    tag "modules_nfcore"
    tag "neoantigeninput"

    test("neoantigens") {

        // TODO nf-core: If you are created a test for a chained module
        // (the module requires running more than one process to generate the required output)
        // add the 'setup' method here.
        // You can find more information about how to use a 'setup' method in the docs (https://nf-co.re/docs/contributing/modules#steps-for-creating-nf-test-for-chained-modules).

        when {
            process {
                """
                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data_base_msk['neoantigen']['temp_test_somatic_unfiltered_maf'], checkIfExists: true)
                    ]

                input[1] = [
                    file(params.test_data_base_msk['neoantigen']['test4_muts_json'], checkIfExists: true),
                    file(params.test_data_base_msk['neoantigen']['test4_summ_json'], checkIfExists: true),
                    file(params.test_data_base_msk['neoantigen']['test4_mutass_0_json'], checkIfExists: true)
                    ]

                input[2] = [file(params.test_data_base_msk['neoantigen']['winners_hla_txt'], checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

}
